"use strict";
import * as core from "@actions/core";
import { Octokit } from "@octokit/rest";
const octokit = new Octokit();

console.log("Fetching repository information for PR#:", process.env.PR_NUMBER);

const vulnerabilityJsonPath = await octokit.pulls
  .listFiles({
    owner: "418sec",
    repo: "huntr",
    pull_number: process.env.PR_NUMBER,
  })
  .then((files) => {
    const path = files.data.filter(
      (file) => file.filename.split("/").pop() == "vulnerability.json"
    )[0].filename;
    core.setOutput("vulnerability-json-path", path);
    console.log("Found vulnerability.json path: ", path);
    return path;
  })
  .catch((error) => {
    core.setFailed(`Error while fetching repository information: ${error}`);
  });

// Get the vulnerability.json contents
await octokit.repos
  .getContent({
    owner: "418sec",
    repo: "huntr",
    path: vulnerabilityJsonPath,
    ref: "staging",
  })
  .then((response) => {
    const vulnerabilityJson = JSON.parse(
      Buffer.from(response.data.content, "base64").toString()
    );
    const vulnerabilityJsonSha = response.data.sha;
    const packageName = vulnerabilityJson.Package.Name;

    console.log("Package name:", packageName);
    console.log("vulnerability.json:", vulnerabilityJson);
    console.log("vulnerability.json SHA:", vulnerabilityJsonSha);

    core.setOutput("package-name", packageName);
    core.setOutput("vulnerability-json", vulnerabilityJson);
    core.setOutput("vulnerability-json-sha", vulnerabilityJsonSha);
  });
