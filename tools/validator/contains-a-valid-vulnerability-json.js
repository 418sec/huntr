"use strict";

const fs = require("fs/promises");

const Ajv = require("ajv");
const core = require("@actions/core");

const vulnerabilityJsonPath = `${process.env.BOUNTY_DIR}/vulnerability.json`;

// Try to read the vulnerability.json and parse it
const vulnerabilityJson = await fs
  .readFile(vulnerabilityJsonPath, "utf8")
  .then(JSON.parse)
  .catch((err) => {
    core.setFailed(
      `A vulnerability.json does not exist in ${process.env.BOUNTY_DIR}`
    );
  });

// Load the validation schema
const vulnerabilitySchema = await fs
  .readFile("./assets/schemas/vulnerability.json", "utf8")
  .then(JSON.parse);

// Check if the vulnerability.json is valid
var ajv = new Ajv({
  allErrors: true,
  jsonPointers: true,
});

if (!ajv.validate(vulnerabilitySchema, vulnerabilityJson)) {
  ajv.errors.forEach((validationError) => {
    core.warning(validationError.message);
  });

  core.setFailed("The vulnerability.json is invalid.");
}
